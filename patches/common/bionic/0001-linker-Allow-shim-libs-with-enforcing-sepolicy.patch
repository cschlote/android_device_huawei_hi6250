From c2327b701320f28963f6de6a91fff4303bb60605 Mon Sep 17 00:00:00 2001
From: Carsten Schlote <schlote@vahanus.net>
Date: Sun, 29 Jan 2017 19:51:28 +0100
Subject: [PATCH] linker: Allow shim libs with enforcing sepolicy.

-It seems that the LD_SHIM_LIBS was not intended to be
used with an enforcing sepolicy. This device (hi6250 variants)
uses a shim lib for missing symbols. The alternative is to put the
symbols into each lib. I prefer this solution which loads the
var dispite the security restrictions.

-It also seems that with an enforcing sepolicy, the LD_SHIM_LIBS
env var can not be set. So, I just set if from BoardConfig with
the LD_SHIM_LIBS define.

Change-Id: Idffac533dd65dc2c063ef9fc7e54aaaced7c250c
---
 linker/Android.mk | 4 ++++
 linker/linker.cpp | 4 ++++
 2 files changed, 8 insertions(+)

diff --git a/linker/Android.mk b/linker/Android.mk
index 0d592c97f..389226957 100644
--- a/linker/Android.mk
+++ b/linker/Android.mk
@@ -58,6 +58,10 @@ ifeq ($(TARGET_NEEDS_PLATFORM_TEXT_RELOCATIONS),true)
 LOCAL_CPPFLAGS += -DTARGET_NEEDS_PLATFORM_TEXT_RELOCATIONS
 endif
 
+ifneq ($(LD_SHIM_LIBS),)
+LOCAL_CPPFLAGS += -DLD_SHIM_LIBS=\"$(LD_SHIM_LIBS)\"
+endif
+
 # We need to access Bionic private headers in the linker.
 LOCAL_CFLAGS += -I$(LOCAL_PATH)/../libc/
 
diff --git a/linker/linker.cpp b/linker/linker.cpp
index 6cdf1f822..290af86d8 100644
--- a/linker/linker.cpp
+++ b/linker/linker.cpp
@@ -4298,7 +4298,11 @@ static ElfW(Addr) __linker_init_post_relocation(KernelArgumentBlock& args, ElfW(
     if (ldpreload_env != nullptr) {
       INFO("[ LD_PRELOAD set to \"%s\" ]", ldpreload_env);
     }
+#ifdef LD_SHIM_LIBS
+    ldshim_libs_env = LD_SHIM_LIBS;
+#else
     ldshim_libs_env = getenv("LD_SHIM_LIBS");
+#endif
   }
 
   struct stat file_stat;
-- 
2.11.0

